1. id로 태그 선택하기
- const myTag = document.getElementById('id이름');
- getElementById 메소드를 통해 존재하지 않는 id 값으로 태그를 선택하면 그 값은 null 이 됨

2. class로 태그 선택하기
- const myTags = document.getElementsByClassName('class이름');
- 유사 배열 성질의 HTMLCollection 이 만들어짐
- 태그의 순서는 깊이에 상관없이 위에서부터 차례대로 나옴
- getElementsByClassName 메소드를 통해 존재하지 않는 class 값으로 태그를 선택하면 빈 컬렉션이 출력됨

3. 태그 이름으로 태그 선택하기
- document.getElementsByTagName('태그이름');
- HTML 문서 내에 있는 모든 해당 태그를 선택하게 됨, 클래스와 마찬가지로 HTMLCollection 이 만들어짐
- css 에서처럼 '*' 값을 전달하면 모든 태그를 선택할 수도 있음 
- 명확한 의도가 없이 이렇게 많은 요소들을 한꺼번에 다루게 되면 예상치 못한 실수를 할 가능성이 있기 때문에 많이 사용되는 메소드는 X

4. CSS 선택자로 태그 선택하기
- document.querySelector('#이름'); == document.getElementById('id이름');
- document.querySelectorAll('.이름'); == document.getElementsByClassName('class이름');


* 유사배열이란? : 배열과 유사한 객체
- 숫자 형태의 인덱싱 가능
- length 프로퍼티 사용 가능
- 배열의 기본 메소드 사용 가능
- Array.isArray(유사배열)의 리턴값 = false